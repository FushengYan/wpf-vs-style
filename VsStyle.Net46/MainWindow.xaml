<Window x:Class="VsStyle.Net46.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:converters="clr-namespace:VsStyle.Converters"
        xmlns:models="clr-namespace:VsStyle.Models"
        xmlns:data="clr-namespace:VsStyle.Data"
        AllowsTransparency="True" WindowStyle="None" Background="Transparent"
        StateChanged="WindowStateChanged">

    <Window.Resources>
        <!-- Window Border Color -->
        <SolidColorBrush x:Key="BorderThemeColor">#FFCA5100</SolidColorBrush>
        <Color x:Key="FirstGradientStop">#20C5C5C5</Color>
        <Color x:Key="SecondGradientStop">#01C5C5C5</Color>
        <sys:Double x:Key="FirstGradientOffset">1.0</sys:Double>
        <sys:Double x:Key="SecondGradientOffset">0.5</sys:Double>
        <LinearGradientBrush x:Key="LeftBorderGradientBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Color="{StaticResource FirstGradientStop}" Offset="{StaticResource FirstGradientOffset}"/>
            <GradientStop Color="{StaticResource SecondGradientStop}" Offset="{StaticResource SecondGradientOffset}"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="RightBorderGradientBrush" StartPoint="1,0" EndPoint="0,0">
            <GradientStop Color="{StaticResource FirstGradientStop}" Offset="{StaticResource FirstGradientOffset}"/>
            <GradientStop Color="{StaticResource SecondGradientStop}" Offset="{StaticResource SecondGradientOffset}"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="TopBorderGradientBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="{StaticResource FirstGradientStop}" Offset="{StaticResource FirstGradientOffset}"/>
            <GradientStop Color="{StaticResource SecondGradientStop}" Offset="{StaticResource SecondGradientOffset}"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="BottomBorderGradientBrush" StartPoint="0,1" EndPoint="0,0">
            <GradientStop Color="{StaticResource FirstGradientStop}" Offset="{StaticResource FirstGradientOffset}"/>
            <GradientStop Color="{StaticResource SecondGradientStop}" Offset="{StaticResource SecondGradientOffset}"/>
        </LinearGradientBrush>

        <!-- TreeView Style -->
        <Style x:Key="{x:Type TreeView}" TargetType="TreeView">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeView">
                        <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false"
                                          HorizontalScrollBarVisibility="auto"
                                          VerticalScrollBarVisibility="Auto">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>

                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                                    Grid.Row="0" Grid.Column="0"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />

                                            <!-- 垂直滚动条 -->
                                            <ScrollBar x:Name="PART_VerticalScrollBar" HorizontalAlignment="Right"
                                                       Grid.Row="0" Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableHeight}"
                                                       Orientation="Vertical"
                                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <!-- 水平滚动条 -->
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" VerticalAlignment="Bottom"
                                                       Grid.Row="1" Grid.Column="0"
                                                       Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <Grid Grid.Row="1" Grid.Column="1"
                                                  Background="#FF3E3E42">
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Padding" Value="1,0,0,0"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Border>
                                                    <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2" Opacity="0" Fill="Black"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <!--<Setter Property="IsExpanded" Value="True"/>-->
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Border Name="Bd" Background="{TemplateBinding Background}" BorderThickness="0" Padding="{TemplateBinding Padding}">
                                            <Border.Resources>
                                                <converters:TreeNodeLevel2LeadingConverter x:Key="TreeNodeLevel2LeadingConverter"/>
                                                <converters:Boolean2VisibilityConverter Inverse="True" x:Key="HideArrowConverter"/>
                                            </Border.Resources>
                                            <Grid Margin="{Binding Level, Converter={StaticResource TreeNodeLevel2LeadingConverter}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <ToggleButton x:Name="Expander" 
                                                              Visibility="{Binding IsHideArrow, Converter={StaticResource HideArrowConverter}}"
                                                              ClickMode="Press" 
                                                              HorizontalAlignment="Left" 
                                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="ToggleButton">
                                                                        <Border Width="12" Height="12">
                                                                            <Path x:Name="ExpandPath"
                                                                                  HorizontalAlignment="Right" 
                                                                                  VerticalAlignment="Center" 
                                                                                  Fill="Transparent"
                                                                                  Stroke="#FFE6E6E6" 
                                                                                  Data="M 2 2 L 6 6 L 2 10 Z"/>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <MultiTrigger>
                                                                                <MultiTrigger.Conditions>
                                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                                    <Condition Property="IsChecked" Value="False"/>
                                                                                </MultiTrigger.Conditions>
                                                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                                                            </MultiTrigger>
                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                <Setter Property="Data" TargetName="ExpandPath" Value="M 1 9 L 6 3 L 6 9 Z"/>
                                                                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FFE6E6E6"/>
                                                                            </Trigger>
                                                                            <MultiTrigger>
                                                                                <MultiTrigger.Conditions>
                                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                                    <Condition Property="IsChecked" Value="True"/>
                                                                                </MultiTrigger.Conditions>
                                                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                                                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                                                            </MultiTrigger>

                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <ContentPresenter Grid.Column="1" Margin="13,0,0,0" x:Name="PART_Header" ContentSource="Header"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                            </Grid>
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsExpanded" Value="false">
                                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false"/>
                                                <Condition Property="Width" Value="Auto"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false"/>
                                                <Condition Property="Height" Value="Auto"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Bd" Property="Background" Value="#FF3399FF"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="#FF3F3F46"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="#333"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button Style in Catption Bar -->
        <Style x:Key="CaptionBarButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF3E3E40"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF007ACC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button Style in Tab Item -->
        <Style x:Key="TabItemButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#20FFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#20000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TabControl Style -->
        <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border>
                                <TabPanel IsItemsHost="True" />
                            </Border>
                            <Border x:Name="content" Grid.Row="1" Background="#FF1E1E1E" BorderThickness="0,2,0,0" BorderBrush="#FF007ACC" >
                                <ContentPresenter ContentSource="SelectedContent" Name="PART_SelectedContentHost"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="content" Property="Background" Value="Transparent"/>
                                <Setter TargetName="content" Property="BorderBrush" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="FontWeight" Value="Light"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Border Name="bd" Background="{TemplateBinding Background}" Height="22"
                                            Padding="6,0,2,0">
                                        <Border.Resources>
                                            <converters:Boolean2ObjectConverter x:Key="ImageRotateAngleConverter">
                                                <converters:Boolean2ObjectConverter.ValueIfTrue>
                                                    <sys:Double>-90</sys:Double>
                                                </converters:Boolean2ObjectConverter.ValueIfTrue>
                                                <converters:Boolean2ObjectConverter.ValueIfFalse>
                                                    <sys:Double>0</sys:Double>
                                                </converters:Boolean2ObjectConverter.ValueIfFalse>
                                            </converters:Boolean2ObjectConverter>
                                            <converters:Boolean2ObjectConverter x:Key="ButtonOpacityConverter">
                                                <converters:Boolean2ObjectConverter.ValueIfTrue>
                                                    <sys:Double>1</sys:Double>
                                                </converters:Boolean2ObjectConverter.ValueIfTrue>
                                                <converters:Boolean2ObjectConverter.ValueIfFalse>
                                                    <sys:Double>0</sys:Double>
                                                </converters:Boolean2ObjectConverter.ValueIfFalse>
                                            </converters:Boolean2ObjectConverter>
                                        </Border.Resources>
                                        <StackPanel Orientation="Horizontal">
                                            <ContentPresenter Grid.Column="0" ContentSource="Header" VerticalAlignment="Center" Margin="0,0,8,0"/>
                                            <Button Style="{StaticResource TabItemButtonStyle}"
                                                    x:Name="dock" Opacity="{Binding IsPinned, Converter={StaticResource ButtonOpacityConverter}}"
                                                    VerticalAlignment="Center" Width="18" Height="18"
                                                    Click="DockTabItemButtonClick" Tag="{Binding}">
                                                <Image Source="Assets/Images/icon.dock.19x19.png" Stretch="Uniform" 
                                                       Height="13" Width="13">
                                                    <Image.LayoutTransform>
                                                        <RotateTransform Angle="{Binding IsPinned, Converter={StaticResource ImageRotateAngleConverter}}"></RotateTransform>
                                                    </Image.LayoutTransform>
                                                </Image>
                                            </Button>
                                            <Button Style="{StaticResource TabItemButtonStyle}"
                                                    x:Name="close" Opacity="0"
                                                    VerticalAlignment="Center" Width="18" Height="18" Margin="2,0,0,0"
                                                    Click="CloseTabItemButtonClick" Tag="{Binding}">
                                                <Image Source="Assets/Images/icon.close.19x19.png" Stretch="Uniform" 
                                                       Height="13" Width="13"></Image>
                                            </Button>
                                        </StackPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="bd" Property="Background" Value="#FF1C97EA"/>
                                            <Setter TargetName="dock" Property="Opacity" Value="1"/>
                                            <Setter TargetName="close" Property="Opacity" Value="1"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="bd" Property="Background" Value="#FF007ACC"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="bd" Property="Background" Value="#FF007ACC"/>
                                            <Setter TargetName="dock" Property="Opacity" Value="1"/>
                                            <Setter TargetName="close" Property="Opacity" Value="1"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="6"/>
            <RowDefinition />
            <RowDefinition Height="6"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="6"/>
            <ColumnDefinition />
            <ColumnDefinition Width="6"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="1" Grid.Column="1"
              Background="#FF2D2D30">
            <Grid.RowDefinitions>
                <RowDefinition Height="34"/>
                <RowDefinition Height="30"/>
                <RowDefinition />
                <RowDefinition Height="22"/>
            </Grid.RowDefinitions>

            <!-- 标题栏 -->
            <Grid Grid.Row="0"
                  MouseDown="MouseDownOnTitleBar">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Image Grid.Column="0" Margin="4"
                       x:Name="LogoImage"
                       Source="Assets/Images/icon.vs.png" Stretch="UniformToFill">
                </Image>

                <TextBlock Grid.Column="1" VerticalAlignment="Center" 
                           Foreground="#FF7D7D7D" FontSize="13">
                    wpf-vs-style - Microsoft Visual Studio
                </TextBlock>

                <StackPanel Grid.Column="2" 
                            Orientation="Horizontal">
                    <Button Style="{StaticResource CaptionBarButtonStyle}"
                            Height="28" VerticalAlignment="Top"
                            Click="MinimizeButtonClick">
                        <Image Source="Assets/Images/icon.minimize.png" Stretch="UniformToFill"></Image>
                    </Button>
                    <Button Style="{StaticResource CaptionBarButtonStyle}"
                            Height="28" VerticalAlignment="Top"
                            Click="MaximizeButtonClick">
                        <Image Source="Assets/Images/icon.maximize.png" Stretch="UniformToFill"
                               x:Name="MaximizeButtonImage"></Image>
                    </Button>
                    <Button Style="{StaticResource CaptionBarButtonStyle}"
                            Height="28" VerticalAlignment="Top"
                            Click="CloseButtonClick">
                        <Image Source="Assets/Images/icon.close.png" Stretch="UniformToFill"></Image>
                    </Button>
                </StackPanel>
            </Grid>

            <!-- 菜单栏 -->
            <Grid Grid.Row="1">

            </Grid>

            <!-- 内容界面 -->
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <!-- 左停靠窗口 -->
                <Border Grid.Row="0" Grid.Column="0" Width="250"
                        BorderThickness="1" BorderBrush="#FF3F3F46">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24"/>
                            <RowDefinition Height="24"/>
                            <RowDefinition Height="24"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Border>
                        </Border>

                        <Border Grid.Row="3"
                                Background="#FF252526"
                                BorderThickness="0,1,0,0" BorderBrush="#FF3F3F46">
                            <TreeView ItemsSource="{Binding Source={x:Static data:SolutionExplorer.Explorer}, Path=RootNodes}" 
                                      BorderThickness="0" 
                                      Margin="0,4,0,0"
                                      HorizontalContentAlignment="Stretch">
                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate DataType="{x:Type models:TreeNode}" ItemsSource="{Binding ChildNodes}">
                                        <StackPanel Height="20" Tag="{Binding}" Background="Transparent"
                                                Orientation="Horizontal">
                                            <Image Source="{Binding ImageUri}" Stretch="UniformToFill" Width="18" Height="18"/>
                                            <TextBlock Margin="6,0,0,0" 
                                                    Text="{Binding Label}" VerticalAlignment="Center" FontSize="12"
                                                    FontWeight="Light"/>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>
                            </TreeView>
                        </Border>
                    </Grid>
                </Border>

                <!-- 主内容 -->
                <Border Grid.Row="0" Grid.Column="1">
                    <TabControl ItemsSource="{Binding Source={x:Static data:ContentManager.Manager}, Path=TabItems}"
                                SelectedItem="{Binding Source={x:Static data:ContentManager.Manager}, Path=SelectedTabItem}">
                    </TabControl>
                </Border>
            </Grid>

            <!-- 状态栏 -->
            <Grid Grid.Row="3" Background="{StaticResource BorderThemeColor}">
                <TextBlock VerticalAlignment="Center" FontSize="13" Foreground="White" Margin="4,0,0,0">
                    Ready
                </TextBlock>
            </Grid>
        </Grid>

        <Border Grid.Row="1" Grid.Column="0" Margin="0,-1,0,-1"
                BorderThickness="0,0,1,0" BorderBrush="{DynamicResource BorderThemeColor}"
                Background="{StaticResource LeftBorderGradientBrush}">
            <Thumb Cursor="SizeWE" DragDelta="WindowBorderDragDelta"
                   Margin="0,6,0,6"></Thumb>
        </Border>
        <Border Grid.Row="1" Grid.Column="2" Margin="0,-1,0,-1"
                BorderThickness="1,0,0,0" BorderBrush="{DynamicResource BorderThemeColor}"
                Background="{StaticResource RightBorderGradientBrush}">
            <Thumb Cursor="SizeWE" DragDelta="WindowBorderDragDelta"
                   Margin="0,6,0,6"></Thumb>
        </Border>
        <Border Grid.Row="0" Grid.Column="1" Margin="-1,0,-1,0"
                BorderThickness="0,0,0,1" BorderBrush="{DynamicResource BorderThemeColor}"
                Background="{StaticResource TopBorderGradientBrush}">
            <Thumb Cursor="SizeNS" DragDelta="WindowBorderDragDelta"
                   Margin="6,0,6,0"></Thumb>
        </Border>
        <Border Grid.Row="2" Grid.Column="1" Margin="-1,0,-1,0"
                BorderThickness="0,1,0,0" BorderBrush="{DynamicResource BorderThemeColor}"
                Background="{StaticResource BottomBorderGradientBrush}">
            <Thumb Cursor="SizeNS" DragDelta="WindowBorderDragDelta"
                   Margin="6,0,6,0"></Thumb>
        </Border>
        <Border Grid.Row="0" Grid.Column="0">
            <Thumb Cursor="SizeNWSE" DragDelta="WindowBorderDragDelta"
                   Margin="0,0,-5,-5"></Thumb>
        </Border>
        <Border Grid.Row="2" Grid.Column="2">
            <Thumb Cursor="SizeNWSE" DragDelta="WindowBorderDragDelta"
                   Margin="-5,-5,0,0"></Thumb>
        </Border>
        <Border Grid.Row="0" Grid.Column="2">
            <Thumb Cursor="SizeNESW" DragDelta="WindowBorderDragDelta"
                   Margin="-5,0,0,-5"></Thumb>
        </Border>
        <Border Grid.Row="2" Grid.Column="0">
            <Thumb Cursor="SizeNESW" DragDelta="WindowBorderDragDelta"
                   Margin="0,-5,-5,0"></Thumb>
        </Border>
    </Grid>
</Window>
